!function(){class t extends HTMLElement{constructor(){super(),this.isOpen=!1,this.closeBtns=null,this.isOpen=Boolean(this.getAttribute("open")),this.insert(this.innerHTML)}insert(t){this.innerHTML=`\n      <div class="modal-dialog">\n        <button class="modal-close" aria-label="Close" close>\n          &times;\n        </button>\n        ${t}\n      </div>\n    `,this.closeBtns=this.querySelectorAll("button[close]")}connectedCallback(){this.setAttribute("role","dialog"),this.setAttribute("aria-modal","true"),this.setAttribute("aria-hidden","false"),this.setAttribute("tabindex","-1"),this.isOpen&&this.open(),this.addEventListener("mousedown",(t=>t.target===this&&this.close())),this.addEventListener("keydown",(t=>27===t.keyCode&&this.close())),this.closeBtns.forEach((t=>t.addEventListener("click",this.close.bind(this))))}open(){this.isOpen=!0,this.classList.add("-open"),document.documentElement.setAttribute("aria-hidden","true"),document.body.setAttribute("style","overflow: hidden"),this.focus()}close(t){t&&t.preventDefault(),this.isOpen=!1,this.classList.remove("-open"),document.documentElement.removeAttribute("aria-hidden"),document.body.removeAttribute("style")}}customElements.define("component-modal",t);class e extends HTMLElement{constructor(){super(),this.target=this.getAttribute("target")||"component-modal",this.modal=document.querySelector(this.target),this.button=this.querySelector("button")}connectedCallback(){this.button.addEventListener("click",(t=>{t.preventDefault(),this.modal.isOpen?this.modal.close():this.modal.open()}))}}customElements.define("open-modal",e)}();